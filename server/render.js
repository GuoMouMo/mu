import { createServer } from "http";
import path from 'path';
import React from "react";
import ReactDOMServer from "react-dom/server";
import { StaticRouter } from "react-router-dom";
import { Provider } from 'react-redux'
import { ChunkExtractor, ChunkExtractorManager } from '@loadable/server'
import configureStore from '../src/page/redux/configureStore';
import App from '../src/page/App';

createServer((req, res) => {
  const store = configureStore();
  res.write('<html><head><title>Test</title></head><body>')
  // This is the stats file generated by webpack loadable plugin
  const statsFile = path.resolve('./assets/loadable-stats.json');
  // We create an extractor from the statsFile
  const chunkExtractor = new ChunkExtractor({ statsFile });
  // Wrap your application using "collectChunks"
  const context = {};
  const jsx = chunkExtractor.collectChunks(
    <Provider store={store}>
      <StaticRouter location={req.url} context={context}>
        <App />
      </StaticRouter>
    </Provider>
  );
  // Render your application
  const stream = ReactDOMServer.renderToNodeStream(jsx);
  // You can now collect your script tags
  // const scriptTags = extractor.getScriptTags(); // or extractor.getScriptElements();
  // // // You can also collect your "preload/prefetch" links
  // const linkTags = extractor.getLinkTags() // or extractor.getLinkElements();
  // // And you can even collect your style tags (if you use "mini-css-extract-plugin")
  // const styleTags = extractor.getStyleTags() // or extractor.getStyleElements();
  // res.write(
  //   `<!DOCTYPE html>
  //       <html lang="en">
  //       <head>
  //         <meta charset="UTF-8">
  //         <title>React App</title>
  //         ${linkTags}
  //         ${styleTags}
  //       </head>
  //       <body>
  //         <div id="app">${html}</div>
  //         <script type="text/javascript">window.__INITIAL_DATA__ = ${JSON.stringify(
  //           {}
  //         )}</script>
  //         ${scriptTags}
  //       </body>
  //     </html>
  //   `
  // );
  // res.end();
  // const context = {};
  // res.write(`${html}`);
  // res.end();
  // const statsFile = path.join(process.cwd(), 'assets/loadable-stats.json');
  // const chunkExtractor = new ChunkExtractor({ statsFile });
  // const jsx = chunkExtractor.collectChunks(<StaticRouter location={req.url} context={context}>
  //   {/* <App /> */}
  //   <div>123</div>
  // </StaticRouter>)
  // const stream = renderToNodeStream(jsx);
  console.log(`${chunkExtractor.getScriptTags}`);
  stream.pipe(
    res,
    { end: false },
  );
  // and finalize the response with closing HTML
  stream.on('end', () =>
    res.end(`${chunkExtractor.getScriptTags()}</body></html>`),
  );
}).listen(3000);
