import path from 'path';
import React from "react";
import ReactDOMServer from "react-dom/server";
import { StaticRouter } from "react-router-dom";
import { Provider } from 'react-redux'
import { ChunkExtractor } from '@loadable/server'
import configureStore from '../src/page/redux/configureStore';
import App from '../src/page/App';

const createServer = (ctx) => {
  const store = configureStore();
  // This is the stats file generated by webpack loadable plugin
  const statsFile = path.resolve('./assets/loadable-stats.json');
  // We create an extractor from the statsFile
  const chunkExtractor = new ChunkExtractor({ statsFile });
  // Wrap your application using "collectChunks"
  const context = {};
  const jsx = chunkExtractor.collectChunks(
    <Provider store={store}>
      <StaticRouter location={ctx.req.url} context={context}>
        <App />
      </StaticRouter>
    </Provider>
  );
  // chunkExtractor.addChunk('program');
  // Render your application
  const stream = ReactDOMServer.renderToString(jsx);
  // You can now collect your script tags
  const scriptTags = chunkExtractor.getScriptTags(); // or extractor.getScriptElements();
  // // You can also collect your "preload/prefetch" links
  const linkTags = chunkExtractor.getLinkTags() // or extractor.getLinkElements();
  // And you can even collect your style tags (if you use "mini-css-extract-plugin")
  const styleTags = chunkExtractor.getStyleTags() // or extractor.getStyleElements();
  ctx.body = `<!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no,minimal-ui,viewport-fit=cover">
        <meta name="format-detection" content="telephone=no, email=no">
        <meta name="apple-mobile-web-app-capable" content="yes">
        <meta name="apple-touch-fullscreen" content="yes">    
        <title>React App</title>
        ${linkTags}
        ${styleTags}
        <script>(window.__setFontSize__=function(){document.documentElement.style.fontSize = Math.min(640, Math.max(document.documentElement.clientWidth, 320)) / 320 * 14 + 'px'})()</script>
      </head>
      <body>
        <div id="app">${stream}</div>
        <script type="text/javascript">window.__INITIAL_DATA__ = ${JSON.stringify(store.getState())}</script>
        ${scriptTags}
      </body>
    </html>
  `;
};

export default createServer;
